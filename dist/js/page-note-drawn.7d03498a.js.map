{"version":3,"sources":["webpack:///./node_modules/canvas-free-drawing/dist/index.js","webpack:///./src/views/NoteDrawn.vue?f35e","webpack:///src/views/NoteDrawn.vue","webpack:///./src/views/NoteDrawn.vue?8c79","webpack:///./src/views/NoteDrawn.vue","webpack:///./src/views/NoteDrawn.vue?b767"],"names":["AllowedEvents","Object","defineProperty","exports","value","CanvasFreeDrawing","params","elementId","width","height","_a","backgroundColor","_b","lineWidth","_c","strokeColor","disabled","_d","showWarnings","_e","maxSnapshots","this","requiredParam","canvasNode","document","getElementById","HTMLCanvasElement","canvas","HTMLElement","Error","newCanvas","createElement","appendChild","context","getContext","snapshots","undos","positions","leftCanvasDrawing","isDrawing","isDrawingModeEnabled","imageRestored","toValidColor","bucketToolColor","bucketToolTolerance","isBucketToolEnabled","listenersList","allowedEvents","getAllowedEvents","redrawCounter","dispatchEventsOnceEvery","events","redrawEvent","Event","fillEvent","mouseUpEvent","mouseDownEvent","mouseEnterEvent","mouseLeaveEvent","touchStartEvent","touchEndEvent","bindings","mouseDown","bind","mouseMove","mouseLeave","mouseUp","mouseUpDocument","touchStart","touchMove","touchEnd","touchIdentifier","undefined","previousX","previousY","isNodeColorEqualCache","setDimensions","setBackground","storeSnapshot","enableDrawingMode","prototype","object","param","logWarning","args","_i","arguments","length","console","warn","apply","addListeners","_this","forEach","event","addEventListener","toLowerCase","removeListeners","removeEventListener","event_1","push","toggleCursor","disableDrawingMode","button","x","pageX","offsetLeft","y","pageY","offsetTop","drawPoint","drawLine","changedTouches","identifier","handleEndDrawing","dispatchEvent","mouseEnter","fill","tolerance","storeDrawing","handleDrawing","MouseEvent","TouchEvent","lineJoin","slice","pop","position","strokeStyle","rgbaFromArray","draw","i","moving","beginPath","moveTo","lineTo","closePath","stroke","newColor","pixels","imageData","getImageData","newData","data","targetColor","getNodeColor","isNodeColorEqual","queue","n","w","e","firstNode","lastNode","setNodeColor","putImageData","color","Array","isArray","validColor","j","t","color1","color2","key","hasOwnProperty","diffRed","Math","abs","diffGreen","diffBlue","percentDiffRed","percentDiffGreen","percentDiffBlue","percentDiff","result","a","style","cursor","lastIndex","isBucket","getCanvasSnapshot","splice","restoreCanvasSnapshot","on","callback","counter","includes","Number","isInteger","setLineWidth","px","save","fillStyle","fillRect","setDrawingColor","configBucketTool","setStrokeColor","toggleBucketTool","toggleDrawingMode","clear","clearRect","toDataURL","restore","backup","image","Image","src","onload","drawImage","undo","lastSnapshot","goToSnapshot","redo","lastUndo","default","render","_vm","_h","$createElement","_self","staticClass","attrs","id","fluid","_l","colorItem","colorName","background-color","join","click","$event","selectColor","decrementSize","_v","_s","size","incrementSize","staticStyle","flex","disable","buttonBlock","variant","discardChanges","staticRenderFns","NoteDrawnvue_type_script_lang_js_","name","drawn","colors","light","primary","secondary","success","warning","danger","mounted","el","querySelector","drawnWidth","offsetWidth","drawnHeight","offsetHeight","dist_default","$route","window","ipcRenderer","once","note","finalContent","content","img","floor","resizingCanvas","resizingCanvasContext","curImageDimensions","halfImageDimensions","outputCanvas","outputCanvasContext","send","methods","history","$router","go","_this2","views_NoteDrawnvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoteDrawn_vue_vue_type_style_index_0_id_05dba088_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoteDrawn_vue_vue_type_style_index_0_id_05dba088_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/page-note-drawn.7d03498a.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AllowedEvents;\n(function (AllowedEvents) {\n    AllowedEvents[\"redraw\"] = \"redraw\";\n    AllowedEvents[\"fill\"] = \"fill\";\n    AllowedEvents[\"mouseup\"] = \"mouseup\";\n    AllowedEvents[\"mousedown\"] = \"mousedown\";\n    AllowedEvents[\"mouseenter\"] = \"mouseenter\";\n    AllowedEvents[\"mouseleave\"] = \"mouseleave\";\n})(AllowedEvents = exports.AllowedEvents || (exports.AllowedEvents = {}));\nvar CanvasFreeDrawing = /** @class */ (function () {\n    function CanvasFreeDrawing(params) {\n        var elementId = params.elementId, width = params.width, height = params.height, _a = params.backgroundColor, backgroundColor = _a === void 0 ? [255, 255, 255] : _a, _b = params.lineWidth, lineWidth = _b === void 0 ? 5 : _b, _c = params.strokeColor, strokeColor = _c === void 0 ? [0, 0, 0] : _c, disabled = params.disabled, _d = params.showWarnings, showWarnings = _d === void 0 ? false : _d, _e = params.maxSnapshots, maxSnapshots = _e === void 0 ? 10 : _e;\n        this.requiredParam(params, 'elementId');\n        this.requiredParam(params, 'width');\n        this.requiredParam(params, 'height');\n        this.elementId = elementId;\n        this.canvasNode = document.getElementById(this.elementId);\n        if (this.canvasNode instanceof HTMLCanvasElement) {\n            this.canvas = this.canvasNode;\n        }\n        else if (this.canvasNode instanceof HTMLElement) {\n            var newCanvas = document.createElement('canvas');\n            this.canvasNode.appendChild(newCanvas);\n            this.canvas = newCanvas;\n        }\n        else {\n            throw new Error(\"No element found with following id: \" + this.elementId);\n        }\n        this.context = this.canvas.getContext('2d');\n        this.width = width;\n        this.height = height;\n        this.maxSnapshots = maxSnapshots;\n        this.snapshots = [];\n        this.undos = [];\n        this.positions = [];\n        this.leftCanvasDrawing = false; // to check if user left the canvas drawing, on mouseover resume drawing\n        this.isDrawing = false;\n        this.isDrawingModeEnabled = true;\n        this.imageRestored = false;\n        this.lineWidth = lineWidth;\n        this.strokeColor = this.toValidColor(strokeColor);\n        this.bucketToolColor = this.toValidColor(strokeColor);\n        this.bucketToolTolerance = 0;\n        this.isBucketToolEnabled = false;\n        this.listenersList = [\n            'mouseDown',\n            'mouseMove',\n            'mouseLeave',\n            'mouseUp',\n            'touchStart',\n            'touchMove',\n            'touchEnd',\n        ];\n        this.allowedEvents = this.getAllowedEvents();\n        this.redrawCounter = 0;\n        this.dispatchEventsOnceEvery = 0; // this may become something like: [{event, counter}]\n        // initialize events\n        this.events = {\n            redrawEvent: new Event('cfd_redraw'),\n            fillEvent: new Event('cfd_fill'),\n            mouseUpEvent: new Event('cfd_mouseup'),\n            mouseDownEvent: new Event('cfd_mousedown'),\n            mouseEnterEvent: new Event('cfd_mouseenter'),\n            mouseLeaveEvent: new Event('cfd_mouseleave'),\n            touchStartEvent: new Event('cfd_touchstart'),\n            touchEndEvent: new Event('cfd_touchend'),\n        };\n        this.bindings = {\n            mouseDown: this.mouseDown.bind(this),\n            mouseMove: this.mouseMove.bind(this),\n            mouseLeave: this.mouseLeave.bind(this),\n            mouseUp: this.mouseUp.bind(this),\n            mouseUpDocument: this.mouseUpDocument.bind(this),\n            touchStart: this.touchStart.bind(this),\n            touchMove: this.touchMove.bind(this),\n            touchEnd: this.touchEnd.bind(this),\n        };\n        this.touchIdentifier = undefined;\n        this.previousX = undefined;\n        this.previousY = undefined;\n        this.showWarnings = showWarnings;\n        // cache\n        this.isNodeColorEqualCache = {};\n        this.setDimensions();\n        this.setBackground(backgroundColor);\n        this.storeSnapshot();\n        if (!disabled)\n            this.enableDrawingMode();\n    }\n    CanvasFreeDrawing.prototype.requiredParam = function (object, param) {\n        if (!object || !object[param]) {\n            throw new Error(param + \" is required\");\n        }\n    };\n    CanvasFreeDrawing.prototype.logWarning = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this.showWarnings)\n            console.warn.apply(console, args);\n    };\n    CanvasFreeDrawing.prototype.addListeners = function () {\n        var _this = this;\n        this.listenersList.forEach(function (event) {\n            _this.canvas.addEventListener(event.toLowerCase(), _this.bindings[event]);\n        });\n        document.addEventListener('mouseup', this.bindings.mouseUpDocument);\n    };\n    CanvasFreeDrawing.prototype.removeListeners = function () {\n        var _this = this;\n        this.listenersList.forEach(function (event) {\n            _this.canvas.removeEventListener(event.toLowerCase(), _this.bindings[event]);\n        });\n        document.removeEventListener('mouseup', this.bindings.mouseUpDocument);\n    };\n    CanvasFreeDrawing.prototype.getAllowedEvents = function () {\n        var events = [];\n        for (var event_1 in AllowedEvents) {\n            events.push(event_1);\n        }\n        return events;\n    };\n    CanvasFreeDrawing.prototype.enableDrawingMode = function () {\n        this.isDrawingModeEnabled = true;\n        this.addListeners();\n        this.toggleCursor();\n        return this.isDrawingModeEnabled;\n    };\n    CanvasFreeDrawing.prototype.disableDrawingMode = function () {\n        this.isDrawingModeEnabled = false;\n        this.removeListeners();\n        this.toggleCursor();\n        return this.isDrawingModeEnabled;\n    };\n    CanvasFreeDrawing.prototype.mouseDown = function (event) {\n        if (event.button !== 0)\n            return;\n        var x = event.pageX - this.canvas.offsetLeft;\n        var y = event.pageY - this.canvas.offsetTop;\n        this.drawPoint(x, y);\n    };\n    CanvasFreeDrawing.prototype.mouseMove = function (event) {\n        var x = event.pageX - this.canvas.offsetLeft;\n        var y = event.pageY - this.canvas.offsetTop;\n        this.drawLine(x, y, event);\n    };\n    CanvasFreeDrawing.prototype.touchStart = function (event) {\n        if (event.changedTouches.length > 0) {\n            var _a = event.changedTouches[0], pageX = _a.pageX, pageY = _a.pageY, identifier = _a.identifier;\n            var x = pageX - this.canvas.offsetLeft;\n            var y = pageY - this.canvas.offsetTop;\n            this.touchIdentifier = identifier;\n            this.drawPoint(x, y);\n        }\n    };\n    CanvasFreeDrawing.prototype.touchMove = function (event) {\n        if (event.changedTouches.length > 0) {\n            var _a = event.changedTouches[0], pageX = _a.pageX, pageY = _a.pageY, identifier = _a.identifier;\n            var x = pageX - this.canvas.offsetLeft;\n            var y = pageY - this.canvas.offsetTop;\n            // check if is multi touch, if it is do nothing\n            if (identifier != this.touchIdentifier)\n                return;\n            this.previousX = x;\n            this.previousY = y;\n            this.drawLine(x, y, event);\n        }\n    };\n    CanvasFreeDrawing.prototype.touchEnd = function () {\n        this.handleEndDrawing();\n        this.canvas.dispatchEvent(this.events.touchEndEvent);\n    };\n    CanvasFreeDrawing.prototype.mouseUp = function () {\n        this.handleEndDrawing();\n        this.canvas.dispatchEvent(this.events.mouseUpEvent);\n    };\n    CanvasFreeDrawing.prototype.mouseUpDocument = function () {\n        this.leftCanvasDrawing = false;\n    };\n    CanvasFreeDrawing.prototype.mouseLeave = function () {\n        if (this.isDrawing)\n            this.leftCanvasDrawing = true;\n        this.isDrawing = false;\n        this.canvas.dispatchEvent(this.events.mouseLeaveEvent);\n    };\n    CanvasFreeDrawing.prototype.mouseEnter = function () {\n        this.canvas.dispatchEvent(this.events.mouseEnterEvent);\n    };\n    CanvasFreeDrawing.prototype.handleEndDrawing = function () {\n        this.isDrawing = false;\n        this.storeSnapshot();\n    };\n    CanvasFreeDrawing.prototype.drawPoint = function (x, y) {\n        if (this.isBucketToolEnabled) {\n            this.fill(x, y, this.bucketToolColor, {\n                tolerance: this.bucketToolTolerance,\n            });\n        }\n        else {\n            this.isDrawing = true;\n            this.storeDrawing(x, y, false);\n            this.canvas.dispatchEvent(this.events.mouseDownEvent);\n            this.handleDrawing();\n        }\n    };\n    CanvasFreeDrawing.prototype.drawLine = function (x, y, event) {\n        if (this.leftCanvasDrawing) {\n            this.leftCanvasDrawing = false;\n            if (event instanceof MouseEvent) {\n                this.mouseDown(event);\n            }\n            else if (event instanceof TouchEvent) {\n                this.touchEnd();\n            }\n        }\n        if (this.isDrawing) {\n            this.storeDrawing(x, y, true);\n            this.handleDrawing(this.dispatchEventsOnceEvery);\n        }\n    };\n    CanvasFreeDrawing.prototype.handleDrawing = function (dispatchEventsOnceEvery) {\n        var _this = this;\n        this.context.lineJoin = 'round';\n        var positions = [this.positions.slice().pop()];\n        positions.forEach(function (position) {\n            if (position && position[0] && position[0].strokeColor) {\n                _this.context.strokeStyle = _this.rgbaFromArray(position[0].strokeColor);\n                _this.context.lineWidth = position[0].lineWidth;\n                _this.draw(position);\n            }\n        });\n        if (!dispatchEventsOnceEvery) {\n            this.canvas.dispatchEvent(this.events.redrawEvent);\n        }\n        else if (this.redrawCounter % dispatchEventsOnceEvery === 0) {\n            this.canvas.dispatchEvent(this.events.redrawEvent);\n        }\n        this.undos = [];\n        this.redrawCounter += 1;\n    };\n    CanvasFreeDrawing.prototype.draw = function (position) {\n        var _this = this;\n        position.forEach(function (_a, i) {\n            var x = _a.x, y = _a.y, moving = _a.moving;\n            _this.context.beginPath();\n            if (moving && i) {\n                _this.context.moveTo(position[i - 1]['x'], position[i - 1]['y']);\n            }\n            else {\n                _this.context.moveTo(x - 1, y);\n            }\n            _this.context.lineTo(x, y);\n            _this.context.closePath();\n            _this.context.stroke();\n        });\n    };\n    // https://en.wikipedia.org/wiki/Flood_fill\n    CanvasFreeDrawing.prototype.fill = function (x, y, newColor, _a) {\n        var tolerance = _a.tolerance;\n        newColor = this.toValidColor(newColor);\n        if (this.positions.length === 0 && !this.imageRestored) {\n            this.setBackground(newColor, false);\n            this.canvas.dispatchEvent(this.events.redrawEvent);\n            this.canvas.dispatchEvent(this.events.fillEvent);\n            return;\n        }\n        var pixels = this.width * this.height;\n        var imageData = this.context.getImageData(0, 0, this.width, this.height);\n        var newData = imageData.data;\n        var targetColor = this.getNodeColor(x, y, newData);\n        if (this.isNodeColorEqual(targetColor, newColor, tolerance))\n            return;\n        var queue = [];\n        queue.push([x, y]);\n        while (queue.length) {\n            if (queue.length > pixels)\n                break;\n            var n = queue.pop();\n            var w = n;\n            var e = n;\n            while (this.isNodeColorEqual(this.getNodeColor(w[0] - 1, w[1], newData), targetColor, tolerance)) {\n                w = [w[0] - 1, w[1]];\n            }\n            while (this.isNodeColorEqual(this.getNodeColor(e[0] + 1, e[1], newData), targetColor, tolerance)) {\n                e = [e[0] + 1, e[1]];\n            }\n            var firstNode = w[0];\n            var lastNode = e[0];\n            for (var i = firstNode; i <= lastNode; i++) {\n                this.setNodeColor(i, w[1], newColor, newData);\n                if (this.isNodeColorEqual(this.getNodeColor(i, w[1] + 1, newData), targetColor, tolerance)) {\n                    queue.push([i, w[1] + 1]);\n                }\n                if (this.isNodeColorEqual(this.getNodeColor(i, w[1] - 1, newData), targetColor, tolerance)) {\n                    queue.push([i, w[1] - 1]);\n                }\n            }\n        }\n        this.context.putImageData(imageData, 0, 0);\n        this.canvas.dispatchEvent(this.events.redrawEvent);\n        this.canvas.dispatchEvent(this.events.fillEvent);\n    };\n    CanvasFreeDrawing.prototype.toValidColor = function (color) {\n        if (Array.isArray(color) && color.length === 4)\n            color.pop();\n        if (Array.isArray(color) && color.length === 3) {\n            var validColor = color.slice();\n            validColor.push(255);\n            return validColor;\n        }\n        else {\n            this.logWarning('Color is not valid!\\n' +\n                'It must be an array with RGB values:  [0-255, 0-255, 0-255]');\n            return [0, 0, 0, 255];\n        }\n    };\n    // i = color 1; j = color 2; t = tolerance\n    CanvasFreeDrawing.prototype.isNodeColorEqual = function (i, j, t) {\n        var color1 = '' + i[0] + i[1] + i[2] + i[3];\n        var color2 = '' + j[0] + j[1] + j[2] + j[3];\n        var key = color1 + color2 + t;\n        t = t || 0;\n        if (this.isNodeColorEqualCache.hasOwnProperty(color1 + color2 + t)) {\n            return this.isNodeColorEqualCache[key];\n        }\n        var diffRed = Math.abs(j[0] - i[0]);\n        var diffGreen = Math.abs(j[1] - i[1]);\n        var diffBlue = Math.abs(j[2] - i[2]);\n        var percentDiffRed = diffRed / 255;\n        var percentDiffGreen = diffGreen / 255;\n        var percentDiffBlue = diffBlue / 255;\n        var percentDiff = ((percentDiffRed + percentDiffGreen + percentDiffBlue) / 3) * 100;\n        var result = t >= percentDiff;\n        this.isNodeColorEqualCache[key] = result;\n        return result;\n    };\n    CanvasFreeDrawing.prototype.getNodeColor = function (x, y, data) {\n        var i = (x + y * this.width) * 4;\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\n    };\n    CanvasFreeDrawing.prototype.setNodeColor = function (x, y, color, data) {\n        var i = (x + y * this.width) * 4;\n        data[i] = color[0];\n        data[i + 1] = color[1];\n        data[i + 2] = color[2];\n        data[i + 3] = color[3];\n    };\n    CanvasFreeDrawing.prototype.rgbaFromArray = function (a) {\n        return \"rgba(\" + a[0] + \",\" + a[1] + \",\" + a[2] + \",\" + a[3] + \")\";\n    };\n    CanvasFreeDrawing.prototype.setDimensions = function () {\n        this.canvas.height = this.height;\n        this.canvas.width = this.width;\n    };\n    CanvasFreeDrawing.prototype.toggleCursor = function () {\n        this.canvas.style.cursor = this.isDrawingModeEnabled ? 'crosshair' : 'auto';\n    };\n    CanvasFreeDrawing.prototype.storeDrawing = function (x, y, moving) {\n        if (moving) {\n            var lastIndex = this.positions.length - 1;\n            this.positions[lastIndex].push({\n                x: x,\n                y: y,\n                moving: moving,\n                lineWidth: this.lineWidth,\n                strokeColor: this.strokeColor,\n                isBucket: false,\n            });\n        }\n        else {\n            this.positions.push([\n                {\n                    x: x,\n                    y: y,\n                    isBucket: false,\n                    moving: moving,\n                    lineWidth: this.lineWidth,\n                    strokeColor: this.strokeColor,\n                },\n            ]);\n        }\n    };\n    CanvasFreeDrawing.prototype.storeSnapshot = function () {\n        var imageData = this.getCanvasSnapshot();\n        this.snapshots.push(imageData);\n        if (this.snapshots.length > this.maxSnapshots) {\n            this.snapshots = this.snapshots.splice(-Math.abs(this.maxSnapshots));\n        }\n    };\n    CanvasFreeDrawing.prototype.getCanvasSnapshot = function () {\n        return this.context.getImageData(0, 0, this.width, this.height);\n    };\n    CanvasFreeDrawing.prototype.restoreCanvasSnapshot = function (imageData) {\n        this.context.putImageData(imageData, 0, 0);\n    };\n    // Public APIs\n    CanvasFreeDrawing.prototype.on = function (params, callback) {\n        var event = params.event, counter = params.counter;\n        this.requiredParam(params, 'event');\n        if (this.allowedEvents.includes(event)) {\n            if (event === 'redraw' && counter && Number.isInteger(counter)) {\n                this.dispatchEventsOnceEvery = counter;\n            }\n            this.canvas.addEventListener('cfd_' + event, function () { return callback(); });\n        }\n        else {\n            this.logWarning(\"This event is not allowed: \" + event);\n        }\n    };\n    CanvasFreeDrawing.prototype.setLineWidth = function (px) {\n        this.lineWidth = px;\n    };\n    CanvasFreeDrawing.prototype.setBackground = function (color, save) {\n        if (save === void 0) { save = true; }\n        var validColor = this.toValidColor(color);\n        if (validColor) {\n            if (save)\n                this.backgroundColor = validColor;\n            this.context.fillStyle = this.rgbaFromArray(validColor);\n            this.context.fillRect(0, 0, this.width, this.height);\n        }\n    };\n    CanvasFreeDrawing.prototype.setDrawingColor = function (color) {\n        this.configBucketTool({ color: color });\n        this.setStrokeColor(color);\n    };\n    CanvasFreeDrawing.prototype.setStrokeColor = function (color) {\n        this.strokeColor = this.toValidColor(color);\n    };\n    CanvasFreeDrawing.prototype.configBucketTool = function (params) {\n        var _a = params.color, color = _a === void 0 ? null : _a, _b = params.tolerance, tolerance = _b === void 0 ? null : _b;\n        if (color)\n            this.bucketToolColor = this.toValidColor(color);\n        if (tolerance && tolerance > 0) {\n            this.bucketToolTolerance = tolerance > 100 ? 100 : tolerance;\n        }\n    };\n    CanvasFreeDrawing.prototype.toggleBucketTool = function () {\n        return (this.isBucketToolEnabled = !this.isBucketToolEnabled);\n    };\n    CanvasFreeDrawing.prototype.toggleDrawingMode = function () {\n        return this.isDrawingModeEnabled\n            ? this.disableDrawingMode()\n            : this.enableDrawingMode();\n    };\n    CanvasFreeDrawing.prototype.clear = function () {\n        this.context.clearRect(0, 0, this.width, this.height);\n        this.positions = [];\n        this.imageRestored = false;\n        if (this.backgroundColor)\n            this.setBackground(this.backgroundColor);\n        this.handleEndDrawing();\n    };\n    CanvasFreeDrawing.prototype.save = function () {\n        return this.canvas.toDataURL();\n    };\n    CanvasFreeDrawing.prototype.restore = function (backup, callback) {\n        var _this = this;\n        var image = new Image();\n        image.src = backup;\n        image.onload = function () {\n            _this.imageRestored = true;\n            _this.context.drawImage(image, 0, 0);\n            if (typeof callback === 'function')\n                callback();\n        };\n    };\n    CanvasFreeDrawing.prototype.undo = function () {\n        var lastSnapshot = this.snapshots[this.snapshots.length - 1];\n        var goToSnapshot = this.snapshots[this.snapshots.length - 2];\n        if (goToSnapshot) {\n            this.restoreCanvasSnapshot(goToSnapshot);\n            this.snapshots.pop();\n            this.undos.push(lastSnapshot);\n            this.undos = this.undos.splice(-Math.abs(this.maxSnapshots));\n            this.imageRestored = true;\n        }\n        else {\n            this.logWarning('There are no more undos left.');\n        }\n    };\n    CanvasFreeDrawing.prototype.redo = function () {\n        if (this.undos.length > 0) {\n            var lastUndo = this.undos.pop();\n            if (lastUndo) {\n                this.restoreCanvasSnapshot(lastUndo);\n                this.snapshots.push(lastUndo);\n                this.snapshots = this.snapshots.splice(-Math.abs(this.maxSnapshots));\n            }\n        }\n        else {\n            this.logWarning('There are no more redo left.');\n        }\n    };\n    return CanvasFreeDrawing;\n}());\nexports.default = CanvasFreeDrawing;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"note-drawn\"},[_c('div',{staticClass:\"drawning-area\",attrs:{\"id\":\"note-drawning\"}}),_c('b-container',{staticClass:\"drawn-options border-top border-secondary\",attrs:{\"fluid\":\"\"}},[_c('div',{staticClass:\"line-options text-center\"},[_c('div',{staticClass:\"line-colors\"},[_c('div',{staticClass:\"colors-container\"},_vm._l((_vm.colors),function(colorItem,colorName){return _c('div',{key:colorName,staticClass:\"color-item\"},[_c('div',{staticClass:\"color-select\",style:({'background-color': (\"rgb(\" + (colorItem.join(', ')) + \")\")}),on:{\"click\":function($event){return _vm.selectColor(colorName)}}})])}),0)]),_c('div',{staticClass:\"line-size d-flex\"},[_c('div',{staticClass:\"size-ajust\",on:{\"click\":_vm.decrementSize}},[_vm._v(\"-\")]),_c('div',{staticClass:\"size-value\"},[_vm._v(_vm._s(_vm.size)+\"px\")]),_c('div',{staticClass:\"size-ajust\",on:{\"click\":_vm.incrementSize}},[_vm._v(\"+\")])])]),_c('div',{staticClass:\"actions text-right\"},[_c('div',{staticStyle:{\"flex\":\"1\"}},[_c('b-button',{attrs:{\"disable\":_vm.buttonBlock,\"variant\":\"light\",\"size\":\"sm\"},on:{\"click\":_vm.undo}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"undo\")])]),_vm._v(\"\\n                 \\n                \"),_c('b-button',{attrs:{\"disable\":_vm.buttonBlock,\"variant\":\"warning\",\"size\":\"sm\"},on:{\"click\":_vm.discardChanges}},[_vm._v(\"\\n                    Discard\\n                \")]),_vm._v(\"\\n                 \\n                \"),_c('b-button',{attrs:{\"disable\":_vm.buttonBlock,\"variant\":\"success\",\"size\":\"sm\"},on:{\"click\":_vm.save}},[_vm._v(\"Save\")])],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"note-drawn\">\n        <div class=\"drawning-area\" id=\"note-drawning\"></div>\n        <!-- <b-container fluid class=\"drawning-area\" id=\"note-drawning\"></b-container> -->\n        <b-container fluid class=\"drawn-options border-top border-secondary\">\n            <div class=\"line-options text-center\">\n                <div class=\"line-colors\">\n                    <div class=\"colors-container\">\n                        <div v-for=\"(colorItem, colorName) of colors\" :key=\"colorName\" class=\"color-item\">\n                            <div @click=\"selectColor(colorName)\" class=\"color-select\"\n                                v-bind:style=\"{'background-color': `rgb(${colorItem.join(', ')})`}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"line-size d-flex\">\n                    <div @click=\"decrementSize\" class=\"size-ajust\">-</div>\n                    <div class=\"size-value\">{{ size }}px</div>\n                    <div @click=\"incrementSize\" class=\"size-ajust\">+</div>\n                </div>\n            </div>\n            <div class=\"actions text-right\">\n                <div style=\"flex: 1;\">\n                    <b-button @click=\"undo\" :disable=\"buttonBlock\" variant=\"light\" size=\"sm\">\n                        <i class=\"material-icons\">undo</i>\n                    </b-button>\n                    &nbsp;\n                    <b-button @click=\"discardChanges\" :disable=\"buttonBlock\" variant=\"warning\" size=\"sm\">\n                        Discard\n                    </b-button>\n                    &nbsp;\n                    <b-button @click=\"save\" :disable=\"buttonBlock\" variant=\"success\" size=\"sm\">Save</b-button>\n                </div>\n            </div>\n        </b-container>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n    .note-drawn {\n        overflow: hidden;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n\n        .drawning-area {\n            flex: 1;\n\n            canvas {\n                width: 100%;\n                height: 100%;\n            }\n        }\n\n        .drawn-options {\n            display: flex;\n            padding: 5px 0;\n            margin: 0 -($grid-gutter-width / 2)px;\n\n            .line-options {\n                padding: 0 ($grid-gutter-width / 2);\n                display: flex;\n                flex: 1;\n\n                .line-colors {\n                    flex: 1;\n                    display: flex;\n                    align-items: center;\n\n                    .colors-container {\n                        flex: 1;\n\n                        .color-item {\n                            padding: 0 2px;\n                            display: inline-block;\n                            vertical-align: middle;\n\n                            .color-select {\n                                height: 20px;\n                                width: 20px;\n                            }\n                        }\n                    }\n                }\n\n                .line-size {\n                    align-items: center;\n\n                    .size-ajust {\n                        padding: 0 7px;\n                        font-size: 1.2rem;\n                    }\n\n                    .size-value {\n                        flex: 1;\n                        width: 35px;\n                    }\n                }\n            }\n            .actions {\n                padding: 0 ($grid-gutter-width / 2);\n                align-items: center;\n            }\n        }\n    }\n</style>\n\n<script>\nimport * as CanvasFreeDrawing from 'canvas-free-drawing';\n\nexport default {\n    name: 'note-drawn',\n    data() {\n        return {\n            drawn: null,\n            size: 3,\n            color: 'light',\n            colors: {\n                light: [248, 249, 250],\n                primary: [0, 123, 255],\n                secondary: [108, 117, 125],\n                success: [40, 167, 69],\n                warning: [255, 193, 7],\n                danger: [220, 53, 69],\n            },\n            buttonBlock: false,\n        };\n    },\n    mounted() {\n        const el = document.querySelector('.note-drawn .drawning-area');\n\n        const drawnWidth = el.offsetWidth;\n        const drawnHeight = el.offsetHeight - 5;\n\n        // eslint-disable-next-line new-cap\n        this.drawn = new CanvasFreeDrawing.default({\n            elementId: 'note-drawning',\n            width: drawnWidth,\n            height: drawnHeight,\n            backgroundColor: [0, 0, 0],\n            lineWidth: this.size,\n            strokeColor: this.colors[this.color],\n        });\n\n        const { id } = this.$route.params;\n\n        if (id) {\n            window.ipcRenderer.once('note-get-reply', (event, note) => {\n                // resize a canvas element\n                // https://stackoverflow.com/a/53986239/3337038\n                let finalContent = note.content;\n\n                let width = drawnWidth;\n                let height = drawnHeight;\n\n                const img = new Image();\n                img.src = finalContent;\n\n                img.onload = () => {\n                    // Check if the image require resize at all\n                    if (img.height > height || img.width > width) {\n                        // Make sure the width and height preserve the original aspect ratio and adjust if needed\n                        if (img.height > img.width) {\n                            width = Math.floor(height * (img.width / img.height));\n                        } else {\n                            height = Math.floor(width * (img.height / img.width));\n                        }\n\n                        const resizingCanvas = document.createElement('canvas');\n                        const resizingCanvasContext = resizingCanvas.getContext('2d');\n\n                        // Start with original image size\n                        resizingCanvas.width = img.width;\n                        resizingCanvas.height = img.height;\n\n                        // Draw the original image on the (temp) resizing canvas\n                        resizingCanvasContext.drawImage(img, 0, 0, resizingCanvas.width, resizingCanvas.height);\n\n                        const curImageDimensions = {\n                            width: Math.floor(img.width),\n                            height: Math.floor(img.height),\n                        };\n\n                        const halfImageDimensions = {\n                            width: null,\n                            height: null,\n                        };\n\n                        // Quickly reduce the dize by 50% each time in few iterations until the size is less then\n                        // 2x time the target size - the motivation for it, is to reduce the aliasing that would have been\n                        // created with direct reduction of very big image to small image\n                        while (curImageDimensions.width * 0.5 > width) {\n                            // Reduce the resizing canvas by half and refresh the image\n                            halfImageDimensions.width = Math.floor(curImageDimensions.width * 0.5);\n                            halfImageDimensions.height = Math.floor(curImageDimensions.height * 0.5);\n\n                            resizingCanvasContext.drawImage(resizingCanvas, 0, 0, curImageDimensions.width, curImageDimensions.height, 0, 0, halfImageDimensions.width, halfImageDimensions.height);\n\n                            curImageDimensions.width = halfImageDimensions.width;\n                            curImageDimensions.height = halfImageDimensions.height;\n                        }\n\n                        // Now do final resize for the resizingCanvas to meet the dimension requirments\n                        // directly to the output canvas, that will output the final image\n                        const outputCanvas = document.createElement('canvas');\n                        const outputCanvasContext = outputCanvas.getContext('2d');\n\n                        outputCanvas.width = width;\n                        outputCanvas.height = height;\n\n                        outputCanvasContext.drawImage(resizingCanvas, 0, 0, curImageDimensions.width, curImageDimensions.height, 0, 0, width, height);\n\n                        finalContent = outputCanvas.toDataURL();\n                    }\n\n                    this.drawn.restore(finalContent, () => {\n                        this.drawn.snapshots = [];\n                        this.drawn.undos = [];\n                        this.drawn.storeSnapshot();\n                    });\n                };\n            });\n\n            window.ipcRenderer.send('note-get', id);\n        }\n    },\n    methods: {\n        selectColor(colorName) {\n            this.color = colorName;\n            this.drawn.setStrokeColor(this.colors[this.color]);\n        },\n        incrementSize() {\n            this.size = this.size + 1;\n            this.drawn.setLineWidth(this.size);\n        },\n        decrementSize() {\n            if (this.size > 1) {\n                this.size = this.size - 1;\n                this.drawn.setLineWidth(this.size);\n            }\n        },\n        undo() {\n            this.drawn.undo();\n        },\n        discardChanges() {\n            if (window.history.length > 1) {\n                this.$router.go(-1);\n            } else {\n                this.$router.push('/');\n            }\n        },\n        save() {\n            // window.test();\n            // console.log(window.ipcRenderer.sendSync('synchronous-message', 'ping'));\n\n            // window.ipcRenderer.on('drawn-save-reply', (event, arg) => {\n            //     this.discardChanges();\n            // });\n\n            this.buttonBlock = true;\n\n            window.ipcRenderer.once('note-drawn-save-reply', () => {\n                this.discardChanges();\n            });\n\n            window.ipcRenderer.send('note-drawn-save', { id: this.$route.params.id, content: this.drawn.save() });\n        },\n    },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoteDrawn.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoteDrawn.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NoteDrawn.vue?vue&type=template&id=05dba088&scoped=true&\"\nimport script from \"./NoteDrawn.vue?vue&type=script&lang=js&\"\nexport * from \"./NoteDrawn.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NoteDrawn.vue?vue&type=style&index=0&id=05dba088&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"05dba088\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoteDrawn.vue?vue&type=style&index=0&id=05dba088&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoteDrawn.vue?vue&type=style&index=0&id=05dba088&lang=scss&scoped=true&\""],"sourceRoot":""}